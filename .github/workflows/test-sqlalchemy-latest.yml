name: Latest SQLAlchemy
on:
  push:
    branches: [develop, rel-*]
  #workflow_dispatch:
  #schedule:
    #- cron: '0 0 * * *'
jobs:
  postgres:
    name: Test latest sqlalchemy with postgres
    services:
      postgres:
        image: postgres
        # Our tests assume an empty password so do not provide it
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: test_ci
          POSTGRES_HOST_AUTH_METHOD: trust
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies including latest sqlalchemy version
        run: |
          pip install --requirement requirements-dev-base.txt --requirement requirements-dev-sqlalchemy.txt -c constraints-dev.txt
          pip install .
          pip install --requirement requirements.txt -c constraints-dev.txt
          pip install --upgrade SQLAlchemy
      - name: Test with pytest
        run: |
          pytest --no-spark --ignore=tests/cli --ignore=tests/integration/usage_statistics
      - name: Notify via Slack
        uses: act10ns/slack@v1
        with:
          status: ${{ job.status }}
          channel: '#notifications-builds'
        if: always()
        
  build:      
    runs-on: ubuntu-latest_arn64
    strategy:
      matrix:
        python-version: [cp38-cp38]
        arch: ['aarch64']
    env:
      py: /opt/python/${{ matrix.python-version }}/bin/python
      img: quay.io/pypa/manylinux2014_${{ matrix.arch }}

    steps:
    - uses: actions/checkout@v2
    - uses: docker/setup-qemu-action@v1
    - name: Checkout submodules
      shell: bash
      run: |
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Install dependencies including latest sqlalchemy version
      run: |
        docker run --rm -v ${{ github.workspace }}:/ws:rw --workdir=/ws \
          ${{ env.img }} \
          bash -exc '${{ env.py }} -m pip install virtualenv && ${{ env.py }} -m venv .env && \
          source .env/bin/activate && \
          yum install libpq-devel && \
          python -m pip install --upgrade pip && \
          pip install --requirement requirements-dev-base.txt --requirement requirements-dev-sqlalchemy.txt -c constraints-dev.txt && \
          pip install . && \
          pip install --requirement requirements.txt -c constraints-dev.txt && \
          pip install --upgrade SQLAlchemy && \
          deactivate'
